<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Swarvanu Sengupta</title>
    <link>https://s8sg.github.io/blog/</link>
    <description>Recent content in Blogs on Swarvanu Sengupta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 09 Aug 2018 17:47:03 +0900</lastBuildDate>
    
	<atom:link href="https://s8sg.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FaaSChain</title>
      <link>https://s8sg.github.io/blog/faaschain/</link>
      <pubDate>Thu, 09 Aug 2018 17:47:03 +0900</pubDate>
      
      <guid>https://s8sg.github.io/blog/faaschain/</guid>
      <description> FaaSChain - FaaS Functions as Chain faaschain allows to execute openfaas function as chain
chain.Apply(&amp;#34;image-compress&amp;#34;). ApplyAsync(&amp;#34;upload&amp;#34;, map[string]string{ &amp;#34;url&amp;#34;: &amp;#34;http://s3.amazonaws.com/bucket&amp;#34;, &amp;#34;token&amp;#34;: os.GetEnv(&amp;#34;aws_auth&amp;#34;) }). ApplyModifier(func(data []byte) ([]byte, error) { data, _ := json.Marshal(map[string]string { &amp;#34;status&amp;#34; : &amp;#34;success&amp;#34;, &amp;#34;url&amp;#34; : string(data) }) return []byte(data), nil}). Callback(os.Getenv(&amp;#34;callback_url&amp;#34;)) Getting Started Get faas-chain template
faas-cli template pull https://github.com/s8sg/faaschain Create a new github function
faas-cli new --lang faaschain mychain Edit handler.go
vim mychain/handler.go  </description>
    </item>
    
  </channel>
</rss>